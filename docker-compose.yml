version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: urlshortener-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Tu@123456789
      POSTGRES_DB: urlshortener
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - urlshortener-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: urlshortener-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - urlshortener-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # URL Shortener Service
  urlshortener-service:
    build:
      context: .
      dockerfile: src/Services/UrlShortenerService/Dockerfile
    container_name: urlshortener-service
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=urlshortener;Username=postgres;Password=Tu@123456789;"
      BaseUrl: "http://localhost:5000"
    ports:
      - "5001:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - urlshortener-network
    restart: unless-stopped

  # Redirect Service
  redirect-service:
    build:
      context: .
      dockerfile: src/Services/RedirectService/Dockerfile
    container_name: redirect-service
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=urlshortener;Username=postgres;Password=Tu@123456789;"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__Port: "5672"
      RabbitMQ__UserName: "guest"
      RabbitMQ__Password: "guest"
    ports:
      - "5002:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - urlshortener-network
    restart: unless-stopped

  # Analytics Service (Worker)
  analytics-service:
    build:
      context: .
      dockerfile: src/Services/AnalyticsService/Dockerfile
    container_name: analytics-service
    environment:
      DOTNET_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=urlshortener;Username=postgres;Password=Tu@123456789;"
      RabbitMQ__HostName: "rabbitmq"
      RabbitMQ__Port: "5672"
      RabbitMQ__UserName: "guest"
      RabbitMQ__Password: "guest"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - urlshortener-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: src/Gateway/Dockerfile
    container_name: api-gateway
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
    ports:
      - "5000:8080"
    depends_on:
      - urlshortener-service
      - redirect-service
    networks:
      - urlshortener-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: src/Frontend
      dockerfile: Dockerfile
    container_name: urlshortener-frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - urlshortener-network
    restart: unless-stopped

networks:
  urlshortener-network:
    driver: bridge

volumes:
  postgres_data:
